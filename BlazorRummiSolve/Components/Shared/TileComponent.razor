@using RummiSolve

<div class="tile @(Tile.IsJoker ? "joker" : "")">
    <div class="tile-number" style="color:@GetColor(Tile.TileColor)">
        <b>@(Tile.IsJoker ? "J" : Tile.Value.ToString())</b>
    </div>
</div>


@code {
    [Parameter] public required Tile Tile { get; set; }

    private string GetColor(Tile.Color color)
    {
        return color switch
        {
            Tile.Color.Blue => "blue",
            Tile.Color.Red => "red",
            Tile.Color.Mango => "orange",
            Tile.Color.Black => "black",
            _ => "gray",
        };
    }
}

<style>
    .tile {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 70px;
        margin: 1px;
        background-color: #dcdbdb; /* Fond blanc pour éviter le gris */
        border: 2px solid #CCCCCC;
        border-radius: 10px; /* Coins arrondis */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Ombre portée */
    }

    .tile-number {
        position: absolute;
        top: 5px;
        width: 100%;
        text-align: center;
        font-size: 24px;
        font-weight: bold;
    }

    .tile.joker {
        background-color: #FFD700; /* Fond doré pour le Joker */
    }

    /* Effet au survol */
    .tile:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
        transition: transform 0.2s, box-shadow 0.2s;
    }
</style>