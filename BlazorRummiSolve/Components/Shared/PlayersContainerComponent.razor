@using RummiSolve
<div class="players-container">
    <div class="current-player">
        <PlayerComponent Player="CurrentPlayer" ShowHint="ShowHint" CurrentPlayerRack="CurrentPlayerRack"/>
    </div>

    <hr/>


    @foreach (var player in OtherPlayers)
    {
        <div class="other-players">
            <PlayerComponent Player="player" ShowHint="false" CurrentPlayerRack="player.Rack"/>
        </div>
    }

</div>

@code {
    [Parameter] public required SimplePlayer CurrentPlayer { get; set; }

    [Parameter] public required List<SimplePlayer> OtherPlayers { get; set; }

    [Parameter] public bool ShowHint { get; set; }

    [Parameter] public required Set CurrentPlayerRack { get; set; }

}

<style>
    .players-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .current-player {
        margin-bottom: 30px;
    }

    .current-player > .player-container {
        /* Specific styles for the current player */
        border: 2px solid #4CAF50; /* Subtle green border */
        background: linear-gradient(to right, #f9f9f9, #e8f5e9); /* Light gray to pale green */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow */
    }

    .other-players {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

    .other-players > .player-container {
        border: 1px solid #ccc; /* Neutral gray border */
        background: #f5f5f5; /* Light gray background */
        border-radius: 10px; /* Subtle rounding */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Minimal shadow for depth */
    }

    .other-players > * {
        flex: 1 1 300px;
        margin: 10px;
    }

    hr {
        border: none;
        border-top: 2px solid #ddd; /* Lighter gray line for subtle separation */
        margin: 20px 0;
    }
</style>